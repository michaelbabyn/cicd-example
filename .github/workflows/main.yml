# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  pull_request_ci:
    runs-on: ubuntu-latest
    steps:
      - name: print repo/vcs details
        env:
          EVENT_NAME: ${{ github.event_name }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          echo $EVENT_NAME
          echo $BRANCH_NAME
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: github.event_name == 'DOG'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Test that the ssh key I uploaded is in the right format
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
        run: |
          echo $SSH_PRIVATE_KEY | base64 -d | wc
          echo $SSH_CONFIG | base64 -d 

      - name: Check that the correct files are in working directory
        run: |
          echo '-----> Project directory'
          pwd
          ls -al

      # Runs a set of commands using the runners shell
      - name: Deploy dash app to DE
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
        run: |
          echo '-----> Creating ssh key'
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode -i > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa # permissioning
          eval "$(ssh-agent -s)" # setting ssh environment variable

          echo '-----> Adding keys to ssh-agent'
          ssh-add ~/.ssh/id_rsa

          echo '-----> Creating ssh config'
          echo "$SSH_CONFIG" | base64 --decode -i > ~/.ssh/config

          echo '-----> Adding git remote'
          git config remote.plotly.url >&- || git remote add plotly dokku@dash-customer-success.plotly.host:cicd-michael

          echo '-----> Deploying app'
          git push plotly HEAD:master
